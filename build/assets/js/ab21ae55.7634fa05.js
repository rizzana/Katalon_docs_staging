"use strict";(self.webpackChunkKatalon_Docs=self.webpackChunkKatalon_Docs||[]).push([[35929],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>b});var o=a(67294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function n(e,t){if(null==e)return{};var a,o,s=function(e,t){if(null==e)return{};var a,o,s={},i=Object.keys(e);for(o=0;o<i.length;o++)a=i[o],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)a=i[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var l=o.createContext({}),c=function(e){var t=o.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},d=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var a=e.components,s=e.mdxType,i=e.originalType,l=e.parentName,d=n(e,["components","mdxType","originalType","parentName"]),m=c(a),b=s,h=m["".concat(l,".").concat(b)]||m[b]||p[b]||i;return a?o.createElement(h,r(r({ref:t},d),{},{components:a})):o.createElement(h,r({ref:t},d))}));function b(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=a.length,r=new Array(i);r[0]=m;var n={};for(var l in t)hasOwnProperty.call(t,l)&&(n[l]=t[l]);n.originalType=e,n.mdxType="string"==typeof e?e:s,r[1]=n;for(var c=2;c<i;c++)r[c]=a[c];return o.createElement.apply(null,r)}return o.createElement.apply(null,a)}m.displayName="MDXCreateElement"},77221:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var o=a(87462),s=(a(67294),a(3905)),i=a(44996);const r={id:"96408fd0-22b2-11ed-9930-0242fe3e4a3f",title:"Capture elements in hybrid Android apps in Katalon Studio",slug:"create-tests/record-and-spy/mobile-record-and-spy-utilities/hybrid-mobile-apps-testing/capture-elements-in-hybrid-android-apps-in-katalon-studio",hide_title:!0},n='<a id="id" class="anchor_top_offset"/><a id="ariaid-title1" class="anchor_top_offset"/>Capture elements in hybrid Android apps in <span xmlns="http://www.w3.org/1999/xhtml" className="ph">Katalon Studio</span>',l={unversionedId:"96408fd0-22b2-11ed-9930-0242fe3e4a3f",id:"96408fd0-22b2-11ed-9930-0242fe3e4a3f",title:"Capture elements in hybrid Android apps in Katalon Studio",description:"Katalon Mobile Recorder/Spy utility can detect elements in   hybrid app rendered as native app, but cannot as Webview. This   tutorial provides a solution to capture Android hybrid mobile   elements in WebView with Appium and Chrome Devtools. You can learn   more about Android WebView functionalities from the Android   developer documentation here: WebView.",source:"@site/docs/96408fd0-22b2-11ed-9930-0242fe3e4a3f.md",sourceDirName:".",slug:"/create-tests/record-and-spy/mobile-record-and-spy-utilities/hybrid-mobile-apps-testing/capture-elements-in-hybrid-android-apps-in-katalon-studio",permalink:"/docs/create-tests/record-and-spy/mobile-record-and-spy-utilities/hybrid-mobile-apps-testing/capture-elements-in-hybrid-android-apps-in-katalon-studio",draft:!1,tags:[],version:"current",frontMatter:{id:"96408fd0-22b2-11ed-9930-0242fe3e4a3f",title:"Capture elements in hybrid Android apps in Katalon Studio",slug:"create-tests/record-and-spy/mobile-record-and-spy-utilities/hybrid-mobile-apps-testing/capture-elements-in-hybrid-android-apps-in-katalon-studio",hide_title:!0},sidebar:"aSidebar",previous:{title:"Hybrid mobile apps testing in Katalon Studio overview",permalink:"/docs/create-tests/record-and-spy/mobile-record-and-spy-utilities/hybrid-mobile-apps-testing/hybrid-mobile-apps-testing-in-katalon-studio-overview"},next:{title:"Windows Spy Utility in Katalon Studio",permalink:"/docs/create-tests/record-and-spy/windows-record-and-spy-utilities/windows-spy-utility-in-katalon-studio"}},c={},d=[{value:'<a id="id_1" class="anchor_top_offset"/>Enable WebView debugging for hybrid Android apps',id:"enable-webview-debugging-for-hybrid-android-apps",level:2},{value:'<a id="id_2" class="anchor_top_offset"/>Install ChromeDriver for Appium',id:"install-chromedriver-for-appium",level:2},{value:'<a id="id_3" class="anchor_top_offset"/>Capture elements in hybrid Android apps',id:"capture-elements-in-hybrid-android-apps",level:2}],p={toc:d};function m(e){let{components:t,...a}=e;return(0,s.kt)("wrapper",(0,o.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"capture-elements-in-hybrid-android-apps-in-katalon-studio"},(0,s.kt)("a",{id:"id",class:"anchor_top_offset"}),(0,s.kt)("a",{id:"ariaid-title1",class:"anchor_top_offset"}),"Capture elements in hybrid Android apps in ",(0,s.kt)("span",{xmlns:"http://www.w3.org/1999/xhtml",className:"ph"},"Katalon Studio")),(0,s.kt)("p",{xmlns:"http://www.w3.org/1999/xhtml",className:"p"},"Katalon Mobile Recorder/Spy utility can detect elements in   hybrid app rendered as native app, but cannot as Webview. This   tutorial provides a solution to capture Android hybrid mobile   elements in WebView with Appium and Chrome Devtools. You can learn   more about Android WebView functionalities from the Android   developer documentation here: ",(0,s.kt)("a",{className:"xref j-external-link",href:"https://developer.android.com/reference/android/webkit/WebView",target:"_blank"},"WebView"),"."),(0,s.kt)("h2",{id:"enable-webview-debugging-for-hybrid-android-apps"},(0,s.kt)("a",{id:"id_1",class:"anchor_top_offset"}),"Enable WebView debugging for hybrid Android apps"),(0,s.kt)("p",{xmlns:"http://www.w3.org/1999/xhtml",className:"p"},"Enable WebView debugging in your Android app. To enable this,   set the ",(0,s.kt)("code",{className:"ph codeph"},"setWebContentsDebuggingEnabled")," property on the   ",(0,s.kt)("code",{className:"ph codeph"},"android.webkit.WebView")," element to ",(0,s.kt)("code",{className:"ph codeph"},"true"),".   You can learn more about configuring WebView for debugging from the   Chrome developer documentation here: ",(0,s.kt)("a",{className:"xref j-external-link",href:"https://developer.chrome.com/docs/devtools/remote-debugging/webviews/",target:"_blank"},"Remote     debugging WebViews"),"."),(0,s.kt)("h2",{id:"install-chromedriver-for-appium"},(0,s.kt)("a",{id:"id_2",class:"anchor_top_offset"}),"Install ChromeDriver for Appium"),(0,s.kt)("ol",{xmlns:"http://www.w3.org/1999/xhtml",className:"ol"},(0,s.kt)("li",{className:"li"},"     ",(0,s.kt)("p",{className:"p"},"By default, Appium installation includes the latest version of ChromeDriver. However, if your testing device are running different Chrome browser version, you should download the compatible version with Chrome on your testing devices. You can download ChromeDriver  from the Chromium website: ",(0,s.kt)("a",{className:"xref j-external-link",href:"https://sites.google.com/chromium.org/driver/downloads",target:"_blank"},"ChromeDriver"),". "),"   "),(0,s.kt)("li",{className:"li"},"     ",(0,s.kt)("p",{className:"p"},"Specify the ChromeDriver version in the session. Go to       ",(0,s.kt)("span",{className:"ph uicontrol"},"Project")," > ",(0,s.kt)("span",{className:"ph uicontrol"},"Settings")," > ",(0,s.kt)("span",{className:"ph uicontrol"},"Desired Capabilities")," > ",(0,s.kt)("span",{className:"ph uicontrol"},"Mobile"),"       > ",(0,s.kt)("span",{className:"ph uicontrol"},"Android")," and add this property:"),"     ",(0,s.kt)("table",{className:"table anchor_top_offset",id:"id_2__a7578481-adcf-4b6c-8574-dd344b129e4e"},(0,s.kt)("caption",null),(0,s.kt)("thead",{className:"thead"},(0,s.kt)("tr",{className:!0},(0,s.kt)("th",{className:"entry anchor_top_offset",id:"id_2__a7578481-adcf-4b6c-8574-dd344b129e4e__entry__1"},"Name"),(0,s.kt)("th",{className:"entry anchor_top_offset",id:"id_2__a7578481-adcf-4b6c-8574-dd344b129e4e__entry__2"},"Type"),(0,s.kt)("th",{className:"entry anchor_top_offset",id:"id_2__a7578481-adcf-4b6c-8574-dd344b129e4e__entry__3"},"Value"))),(0,s.kt)("tbody",{className:"tbody"},(0,s.kt)("tr",{className:!0},(0,s.kt)("td",{className:"entry",headers:"id_2__a7578481-adcf-4b6c-8574-dd344b129e4e__entry__1 id_2__a7578481-adcf-4b6c-8574-dd344b129e4e__entry__2 id_2__a7578481-adcf-4b6c-8574-dd344b129e4e__entry__3 "},"chromedriverExecutable(*)"),(0,s.kt)("td",{className:"entry",headers:"id_2__a7578481-adcf-4b6c-8574-dd344b129e4e__entry__1 id_2__a7578481-adcf-4b6c-8574-dd344b129e4e__entry__2 id_2__a7578481-adcf-4b6c-8574-dd344b129e4e__entry__3 "},"String"),(0,s.kt)("td",{className:"entry",headers:"id_2__a7578481-adcf-4b6c-8574-dd344b129e4e__entry__1 id_2__a7578481-adcf-4b6c-8574-dd344b129e4e__entry__2 id_2__a7578481-adcf-4b6c-8574-dd344b129e4e__entry__3 "},"             ",(0,s.kt)("code",{className:"ph codeph"},"<path-to-your-chromedriver>")," (**)")))),"     ",(0,s.kt)("p",{className:"p"},"(*) ",(0,s.kt)("code",{className:"ph codeph"},"chromedriverExecutable"),": Support specifying ChromeDriver       version in session capabilities."),"     ",(0,s.kt)("p",{className:"p"},"(**)",(0,s.kt)("code",{className:"ph codeph"},"<path-to-your-chromedriver>"),": full path to       the ChromeDriver executable downloaded from Step 1. For example:       ",(0,s.kt)("code",{className:"ph codeph"},"/Users/katalon.team/Downloads/chromedriver"),"."),"     ",(0,s.kt)("p",{className:"p"},"       ",(0,s.kt)("img",{className:"image",src:(0,i.Z)("/963bfbf0-22b2-11ed-9930-0242fe3e4a3f.png"),alt:"Specify path to ChromeDriver executable file"}),"               "))),(0,s.kt)("h2",{id:"capture-elements-in-hybrid-android-apps"},(0,s.kt)("a",{id:"id_3",class:"anchor_top_offset"}),"Capture elements in hybrid Android apps"),(0,s.kt)("ol",{xmlns:"http://www.w3.org/1999/xhtml",className:"ol"},(0,s.kt)("li",{className:"li"},"Create a new test case. Go to ",(0,s.kt)("strong",{className:"ph b"},"File > New > Test Case"),"."),(0,s.kt)("li",{className:"li"},"     ",(0,s.kt)("p",{className:"p"},"From the main toolbar in the blank test case page, click ",(0,s.kt)("strong",{className:"ph b"},"Record Mobile")," and select ",(0,s.kt)("strong",{className:"ph b"},"Android Devices"),". To learn more about the Record Mobile utility, you can refer to this document ",(0,s.kt)("a",{className:"xref",href:"/docs/create-tests/record-and-spy/mobile-record-and-spy-utilities/generate-test-scripts-for-a-progressive-web-app-using-mobile-recorder-in-katalon-studio"},"Record Mobile Utility"),"."),"     ",(0,s.kt)("p",{className:"p"}," ",(0,s.kt)("img",{className:"image",src:(0,i.Z)("https://github.com/katalon-studio/docs-images/raw/master/katalon-studio/docs/capture-objects-in-hybrid-apps/Open-mobile-record.png"),alt:"Open Mobile Record"}),(0,s.kt)("br",null),(0,s.kt)("br",null),"     "),"   "),(0,s.kt)("li",{className:"li"},"     ",(0,s.kt)("p",{className:"p"},"In the pop-up ",(0,s.kt)("strong",{className:"ph b"},"Mobile Recorder")," dialog, specify the information in the ",(0,s.kt)("strong",{className:"ph b"},"Configuration")," section, then click ",(0,s.kt)("strong",{className:"ph b"},"Start")," to begin recording the application under test (AUT)."),"     ",(0,s.kt)("p",{className:"p"}," ",(0,s.kt)("img",{className:"image",src:(0,i.Z)("https://github.com/katalon-studio/docs-images/raw/master/katalon-studio/docs/capture-objects-in-hybrid-apps/Start-mobile-record.png"),alt:"Start Mobile Record"}),(0,s.kt)("br",null),(0,s.kt)("br",null),"     "),"     ",(0,s.kt)("div",{className:"note note note_note"},(0,s.kt)("span",{className:"note__title"},"Note:"),"        ",(0,s.kt)("ul",{className:"ul"},(0,s.kt)("li",{className:"li"},"If your application begins in a WebView, and you don't want to open the AUT in the ",(0,s.kt)("code",{className:"ph codeph"},"NATIVE_APP")," context, go to ",(0,s.kt)("strong",{className:"ph b"},"Project > Settings > Desired Capabilities > Mobile > Android")," to set ",(0,s.kt)("code",{className:"ph codeph"},"autoWebview")," to ",(0,s.kt)("code",{className:"ph codeph"},"true")," in ",(0,s.kt)("strong",{className:"ph b"},"Desired capabilities"),"."),(0,s.kt)("li",{className:"li"},"With this setting, the AUT automatically enters the ",(0,s.kt)("code",{className:"ph codeph"},"WEBVIEW")," context on session start. Skip Step 4,5,6 and move to Step 7 to continue to automate your hybrid app.")),"     "),"   "),(0,s.kt)("li",{className:"li"},"     ",(0,s.kt)("p",{className:"p"},"By default, the Record Utility starts the AUT in the ",(0,s.kt)("code",{className:"ph codeph"},"NATIVE_APP")," context. Set to the ",(0,s.kt)("code",{className:"ph codeph"},"WEBVIEW")," context by using the ",(0,s.kt)("code",{className:"ph codeph"},"switchToWebView")," mobile keyword. More information here: ",(0,s.kt)("a",{className:"xref",href:"/docs/create-tests/keywords/keyword-description-in-katalon-studio/mobile-keywords/mobile-switch-to-web-view"},"[Mobile]switchToWebView"),"     "),"     ",(0,s.kt)("p",{className:"p"},"In the main toolbar, click ",(0,s.kt)("strong",{className:"ph b"},"Add > Mobile keyword"),". A new command line appears, then manually add the ",(0,s.kt)("code",{className:"ph codeph"},"switchToWebview")," mobile keyword."),"     ",(0,s.kt)("pre",{className:"pre codeblock"},(0,s.kt)("code",null,"//to set context to WebView","\n","Mobile.switchToWebView()","\n")),"     ",(0,s.kt)("p",{className:"p"}," ",(0,s.kt)("img",{className:"image",src:(0,i.Z)("https://github.com/katalon-studio/docs-images/raw/master/katalon-studio/docs/capture-objects-in-hybrid-apps/add-webview-mobile-keyword.001.jpeg"),alt:"Add switch to Webview"}),(0,s.kt)("br",null),(0,s.kt)("br",null),"     "),"   "),(0,s.kt)("li",{className:"li"},"     ",(0,s.kt)("p",{className:"p"},"Click ",(0,s.kt)("strong",{className:"ph b"},"Save Script"),". An open dialog asks you to save captured objects into the Object Repository of Katalon Studio. Click ",(0,s.kt)("strong",{className:"ph b"},"OK")," to save recorded actions and objects."),"   "),(0,s.kt)("li",{className:"li"},"     ",(0,s.kt)("p",{className:"p"},"In the new test case saved from step 5, do as follows:"),"     ",(0,s.kt)("ul",{className:"ul"},(0,s.kt)("li",{className:"li"},"Switch to the Script tab."),(0,s.kt)("li",{className:"li"},"Remove command line ",(0,s.kt)("strong",{className:"ph b"},"Close Application"),"."),(0,s.kt)("li",{className:"li"},"Run the test script.")),"     ",(0,s.kt)("p",{className:"p"}," ",(0,s.kt)("img",{className:"image",src:(0,i.Z)("https://github.com/katalon-studio/docs-images/raw/master/katalon-studio/docs/capture-objects-in-hybrid-apps/results-after-recording-mobile-test.png"),alt:"Results after recording mobile test"}),(0,s.kt)("br",null),(0,s.kt)("br",null),"     "),"   "),(0,s.kt)("li",{className:"li"},"     ",(0,s.kt)("p",{className:"p"},"Next, open Chrome browser and navigate to ",(0,s.kt)("strong",{className:"ph b"},"chrome://inspect/#devices"),". The ",(0,s.kt)("strong",{className:"ph b"},"chrome://inspect")," page displays:"),"     ",(0,s.kt)("ul",{className:"ul"},(0,s.kt)("li",{className:"li"},"The name of your Android testing device."),(0,s.kt)("li",{className:"li"},"The version of Chrome that's running on the device, with the version number in parentheses."),(0,s.kt)("li",{className:"li"},"A list of debug-enabled WebViews on your device. After step 9, you should see the URL of the testing Android application here."),(0,s.kt)("li",{className:"li"},"         ",(0,s.kt)("p",{className:"p"},"Click ",(0,s.kt)("strong",{className:"ph b"},"Inspect")," to open a ",(0,s.kt)("strong",{className:"ph b"},"Chrome Devtools")," instance. Use ",(0,s.kt)("strong",{className:"ph b"},"Chrome Devtools")," to inspect WebView elements."),"         ",(0,s.kt)("p",{className:"p"}," ",(0,s.kt)("img",{className:"image",src:(0,i.Z)("https://github.com/katalon-studio/docs-images/raw/master/katalon-studio/docs/capture-objects-in-hybrid-apps/chrome-inspect-displays-hybrid-app.png"),alt:"Chrome Inspect displays"}),(0,s.kt)("br",null),(0,s.kt)("br",null),"         "),"         ",(0,s.kt)("p",{className:"p"},"To learn more about ",(0,s.kt)("strong",{className:"ph b"},"Chrome Devtools")," and its functions, see also ",(0,s.kt)("a",{className:"xref j-external-link",href:"https://developer.chrome.com/docs/devtools/",target:"_blank"},"Chrome Devtools"),"."),"         ",(0,s.kt)("p",{className:"p"}," ",(0,s.kt)("img",{className:"image",src:(0,i.Z)("https://github.com/katalon-studio/docs-images/raw/master/katalon-studio/docs/capture-objects-in-hybrid-apps/Chrome-Devtools.png"),alt:"Debug-enabled Webviews in Devtools"}),(0,s.kt)("br",null),(0,s.kt)("br",null),"         "),"       ")),"   "),(0,s.kt)("li",{className:"li"},"     ",(0,s.kt)("p",{className:"p"},"Return to Katalon Studio. Create and automate objects in your test with inspected elements from Step 7. To learn more about creating test objects in Webview, you can refer to this document ",(0,s.kt)("a",{className:"xref",href:"/docs/create-tests/test-objects/web-test-objects/manage-web-test-objects-in-katalon-studio"},"Web Test Object"),"."),"     ",(0,s.kt)("p",{className:"p"},"In case you are defining test objects programmatically, you can use the following sample code in the script tab of your test:"),"     ",(0,s.kt)("div",{className:"p"},"       ",(0,s.kt)("pre",{className:"pre codeblock"},(0,s.kt)("code",null,"// this is unnecessary if your AUT automatically enters the WEBVIEW context on session start. ","\n","Mobile.switchToWebView() ","\n","// to implement Mobile Driver Factory ","\n","DriverFactory.changeWebDriver(MobileDriverFactory.getDriver())","\n","// to create a new test object named cdmDetails ","\n","TestObject cdmDetails = new TestObject() ","\n","// to add the object's property inspected from step 10 ","\n",'cdmDetails.addProperty("id", ConditionType.EQUALS, "119") ',"\n",'WebUI.setText(cdmDetails, "123")',"\n")),"     "),"     ",(0,s.kt)("p",{className:"p"},"If you wish to stop automating in the ",(0,s.kt)("code",{className:"ph codeph"},"WEBVIEW")," context and back to automating the native portion of the app, use the ",(0,s.kt)("code",{className:"ph codeph"},"switchToNative")," mobile keyword. More information here: ",(0,s.kt)("a",{className:"xref",href:"/docs/create-tests/keywords/keyword-description-in-katalon-studio/mobile-keywords/mobile-switch-to-native"},"[Mobile]switchToNative")," mobile keyword."),"     ",(0,s.kt)("div",{className:"p"},"       ",(0,s.kt)("pre",{className:"pre codeblock"},(0,s.kt)("code",null,"// to switch back to the native mode.","\n","Mobile.switchToNative()","\n")),"     "),(0,s.kt)("strong",{className:"ph b"},"See also"),"     ",(0,s.kt)("ul",{className:"ul"},(0,s.kt)("li",{className:"li"}," ",(0,s.kt)("a",{className:"xref",href:"/docs/create-tests/keywords/custom-keywords/flutter-based-application-testing-with-custom-settext-keyword-in-katalon-studio"},"Flutter-based application testing with SetText custom keyword"),"       ")),"   ")))}m.isMDXComponent=!0}}]);