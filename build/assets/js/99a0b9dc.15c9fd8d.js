"use strict";(self.webpackChunkKatalon_Docs=self.webpackChunkKatalon_Docs||[]).push([[50922],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var s=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,s)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,s,n=function(e,t){if(null==e)return{};var a,s,n={},o=Object.keys(e);for(s=0;s<o.length;s++)a=o[s],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)a=o[s],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=s.createContext({}),i=function(e){var t=s.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=i(e.components);return s.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},d=s.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),d=i(a),m=n,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return a?s.createElement(h,l(l({ref:t},p),{},{components:a})):s.createElement(h,l({ref:t},p))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=d;var r={};for(var c in t)hasOwnProperty.call(t,c)&&(r[c]=t[c]);r.originalType=e,r.mdxType="string"==typeof e?e:n,l[1]=r;for(var i=2;i<o;i++)l[i]=a[i];return s.createElement.apply(null,l)}return s.createElement.apply(null,a)}d.displayName="MDXCreateElement"},15033:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var s=a(87462),n=(a(67294),a(3905)),o=a(44996);const l={id:"14d945f0-c310-11ed-a4d3-0242cfbc79b5",title:"Zephyr Scale",slug:"integrations/unsupported-integrations/zephyr-scale",hide_title:!0},r='<a id="concept-9550" class="anchor_top_offset"/><a id="ariaid-title1" class="anchor_top_offset"/>Zephyr Scale',c={unversionedId:"14d945f0-c310-11ed-a4d3-0242cfbc79b5",id:"14d945f0-c310-11ed-a4d3-0242cfbc79b5",title:"Zephyr Scale",description:"Note: Please note that the use case presented here is a suggestion only and should be implemented with caution. It has not undergone quality assurance testing and is not officially supported by our platform.",source:"@site/docs/14d945f0-c310-11ed-a4d3-0242cfbc79b5.md",sourceDirName:".",slug:"/integrations/unsupported-integrations/zephyr-scale",permalink:"/docs/integrations/unsupported-integrations/zephyr-scale",draft:!1,tags:[],version:"current",frontMatter:{id:"14d945f0-c310-11ed-a4d3-0242cfbc79b5",title:"Zephyr Scale",slug:"integrations/unsupported-integrations/zephyr-scale",hide_title:!0},sidebar:"aSidebar",previous:{title:"WireMock integration",permalink:"/docs/integrations/unsupported-integrations/wiremock-integration"},next:{title:"Katalon Store overview",permalink:"/docs/plugins-and-add-ons/katalon-store/katalon-store-overview"}},i={},p=[{value:'<a id="task-5778" class="anchor_top_offset"/>Setup Zephyr Scale in Jira',id:"setup-zephyr-scale-in-jira",level:2},{value:'<a id="task-8027" class="anchor_top_offset"/>Setup Katalon project',id:"setup-katalon-project",level:2}],u={toc:p};function d(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,s.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"zephyr-scale"},(0,n.kt)("a",{id:"concept-9550",class:"anchor_top_offset"}),(0,n.kt)("a",{id:"ariaid-title1",class:"anchor_top_offset"}),"Zephyr Scale"),(0,n.kt)("div",{xmlns:"http://www.w3.org/1999/xhtml",className:"note note note_note"},(0,n.kt)("span",{className:"note__title"},"Note:")," ",(0,n.kt)("ul",{className:"ul"},(0,n.kt)("li",{className:"li"},(0,n.kt)("p",{className:"p"},"Please note that the use case presented here is a suggestion only and should be implemented with caution. It has not undergone quality assurance testing and is not officially supported by our platform. ")))),(0,n.kt)("p",{xmlns:"http://www.w3.org/1999/xhtml",className:"p"},"This document will cover a step by step guide on integration of Zephyr Scale Cloud in JIRA with Katalon Automation Platform."),(0,n.kt)("h2",{id:"setup-zephyr-scale-in-jira"},(0,n.kt)("a",{id:"task-5778",class:"anchor_top_offset"}),"Setup Zephyr Scale in Jira"),(0,n.kt)("div",{xmlns:"http://www.w3.org/1999/xhtml",className:"section prereq p"},(0,n.kt)("ul",{className:"ul"},(0,n.kt)("li",{className:"li"},(0,n.kt)("p",{className:"p"},"Katalon Studio ")),(0,n.kt)("li",{className:"li"},(0,n.kt)("p",{className:"p"},"Zephyr Scale app in Jira Cloud")))),(0,n.kt)("ol",{xmlns:"http://www.w3.org/1999/xhtml",className:"ol steps"},(0,n.kt)("li",{className:"li step stepexpand"},(0,n.kt)("span",{className:"ph cmd"},"Generate API Access Tokens"),(0,n.kt)("div",{className:"itemgroup info"},"You need to generate an access token to use the API for Zephyr Scale.  Each user interacting with the API will need a token for that instance       of Jira."),(0,n.kt)("ol",{type:"a",className:"ol substeps"},(0,n.kt)("li",{className:"li substep"},(0,n.kt)("span",{className:"ph cmd"},"Click your Jira profile icon and select ",(0,n.kt)("span",{className:"ph uicontrol"},"Zephyr Scale API Access Tokens"),".",(0,n.kt)("img",{className:"image",src:(0,o.Z)("/15cd42e0-c310-11ed-a4d3-0242cfbc79b5.png"),alt:"Zephyr Scale API access tokens"}))),(0,n.kt)("li",{className:"li substep"},(0,n.kt)("span",{className:"ph cmd"},"Select ",(0,n.kt)("span",{className:"ph uicontrol"},"Create access token"),". ",(0,n.kt)("img",{className:"image",src:(0,o.Z)("/1624ffd0-c310-11ed-a4d3-0242cfbc79b5.png"),alt:"Zephyr - create access token"}))),(0,n.kt)("li",{className:"li substep"},(0,n.kt)("span",{className:"ph cmd"},"The pop-up ",(0,n.kt)("span",{className:"ph uicontrol"},"Access token successfully created")," appears. Select ",(0,n.kt)("span",{className:"ph uicontrol"},"Copy")," to copy the access token.")))),(0,n.kt)("li",{className:"li step stepexpand"},(0,n.kt)("span",{className:"ph cmd"},"Now you can get started using the REST API. "),(0,n.kt)("div",{className:"itemgroup info"},"The URL for API requests is: ",(0,n.kt)("pre",{className:"pre codeblock"},(0,n.kt)("code",null,"https://api.zephyrscale.smartbear.com/v2/","{","endpoint","}")),"The authorization we use is based on JWT, so you have to use a bearer token. Add the       ",(0,n.kt)("span",{className:"ph uicontrol"},"Authorization")," header with the value ",(0,n.kt)("code",{className:"ph codeph"},"Bearer ","{","token","}"),".",(0,n.kt)("p",{className:"p"},"You can  refer to the ",(0,n.kt)("a",{className:"xref j-external-link",href:"https://support.smartbear.com/zephyr-scale-cloud/api-docs/",target:"_blank"},"API documentation")," for details on available endpoints and data models."))),(0,n.kt)("li",{className:"li step stepexpand"},(0,n.kt)("span",{className:"ph cmd"},"Create sample Test Case, Test Cycle, Test Plan and link them as  per requirements"))),(0,n.kt)("h2",{id:"setup-katalon-project"},(0,n.kt)("a",{id:"task-8027",class:"anchor_top_offset"}),"Setup Katalon project"),(0,n.kt)("ol",{xmlns:"http://www.w3.org/1999/xhtml",className:"ol steps"},(0,n.kt)("li",{className:"li step stepexpand"},(0,n.kt)("span",{className:"ph cmd"},"Global Variables setup"),(0,n.kt)("div",{className:"itemgroup info"},(0,n.kt)("p",{className:"p"},"Create the following global variable in your package which will be used in API calls for pushing execution results to Zephyr cloud in Jira from Katalon after execution of test cases.",(0,n.kt)("img",{className:"image",src:(0,o.Z)("/152dce90-c310-11ed-a4d3-0242cfbc79b5.png"),alt:"Zephyr Katalon global variables setup"})))),(0,n.kt)("li",{className:"li step stepexpand"},(0,n.kt)("span",{className:"ph cmd"},"Create Test Case and tag"),(0,n.kt)("div",{className:"itemgroup info"},"Script the test case and give name to test case with prefix as Test Case Key from Zephyr Scale then an underscore followed by Test case name, for example:",(0,n.kt)("em",{className:"ph i"}," <<TestCase Key>>_<<Test case name as per your choice>>"),(0,n.kt)("p",{className:"p"},"Also, you need to tag the test case with linked Test Cycle Keys from Zephyr scale as below.",(0,n.kt)("img",{className:"image",src:(0,o.Z)("/14ba4c40-c310-11ed-a4d3-0242cfbc79b5.png"),alt:"Zephyr test case tag"})))),(0,n.kt)("li",{className:"li step stepexpand"},(0,n.kt)("span",{className:"ph cmd"},"Create Web Service Request"),(0,n.kt)("div",{className:"itemgroup info"},(0,n.kt)("p",{className:"p"},"Under the Object repository add a new web service request for API ",(0,n.kt)("a",{className:"xref j-external-link",href:"https://support.smartbear.com/zephyr-scale-cloud/api-docs/#tag/Test-Executions/operation/createTestExecution",target:"_blank"},"Create test execution")," -This API will be used to push test results by creating a new execution record for each Test case after execution in Katalon."),"In API you need to provide an end point, set authorization with bearer token generated in the step Generating API Access Tokens above, update that to HTTP Header and the HTTP Body with parameterized global variables which will be replaced with actual value in       runtime."),(0,n.kt)("div",{className:"itemgroup info"},(0,n.kt)("img",{className:"image",src:(0,o.Z)("/15f7ae40-c310-11ed-a4d3-0242cfbc79b5.png"),alt:"Zephyr - update to HTTP header"}),(0,n.kt)("img",{className:"image",src:(0,o.Z)("/15b96cc0-c310-11ed-a4d3-0242cfbc79b5.png"),alt:"Zephyr update to body"}))),(0,n.kt)("li",{className:"li step stepexpand"},(0,n.kt)("span",{className:"ph cmd"},"Create TestListener"),(0,n.kt)("div",{className:"itemgroup info"},"Create a new test listener with following methods and code given below. This will call the Execution API after each Test case gets executed and push results to Zephyr Scale.",(0,n.kt)("pre",{className:"pre codeblock"},(0,n.kt)("code",null,"<< default import statements will be here>> ","\n","class NewTestListener ","{"," ","\n","\t","/** ","\n","\t","* Executes after every test case ends. ","\n","\t","* @param testCaseContext related information of the executed test case. ","\n","\t","*/ ","\n","\t","@AfterTestCase ","\n","\t","def sampleAfterTestCase(TestCaseContext testCaseContext) ","{"," ","\n","\t","\t","//Get Test Case Key from test case name ","\n","\t","\t","TestCase testCase = findTestCase(testCaseContext.getTestCaseId()) ","\n","\t","\t",'GlobalVariable.g_ZS_TestCaseKey=testCase.getName().split("_")[0]',"\n","\t","\t","//Set Zephyr Status","\n","\t","\t",'if (testCaseContext.getTestCaseStatus()=="PASSED")',"\n","\t","\t","\t",'GlobalVariable.g_ZS_StatusName="Pass"',"\n","\t","\t",'else if (testCaseContext.getTestCaseStatus()=="FAILED")',"\n","\t","\t","\t",'GlobalVariable.g_ZS_StatusName="Fail"',"\n","\t","\t","else","\n","\t","\t","\t",'GlobalVariable.g_ZS_StatusName="Not Executed"',"\n","\t","\t","//Call API to Push Result to Zephyr by creating Test case execution","\n","\t","\t","WS.sendRequest(findTestObject('Create Execution'))","\n","\t","}","\n","}")))),(0,n.kt)("li",{className:"li step stepexpand"},(0,n.kt)("span",{className:"ph cmd"},"Install Basic Search for Dynamic Test Suite Plugin."),(0,n.kt)("div",{className:"itemgroup info"},(0,n.kt)("p",{className:"p"},"You can install ",(0,n.kt)("a",{className:"xref j-external-link",href:"https://store.katalon.com/product/2/Basic-Search-For-Dynamic-Test-Suite",target:"_blank"},"Basic Search For Dynamic Test Suite")," by login into the Katalon Store and reload the plugin in Katalon Studio.",(0,n.kt)("img",{className:"image",src:(0,o.Z)("/14f97820-c310-11ed-a4d3-0242cfbc79b5.png"),alt:"Katalon Studio reload plugins"})),"     ")),(0,n.kt)("li",{className:"li step stepexpand"},(0,n.kt)("span",{className:"ph cmd"},"Create Dynamic Test Suite and Generate Command for Console Mode"),(0,n.kt)("ol",{type:"a",className:"ol substeps"},(0,n.kt)("li",{className:"li substep"},(0,n.kt)("span",{className:"ph cmd"},"In ",(0,n.kt)("span",{className:"ph uicontrol"},"Test Explorer")," panel, right-click at the ",(0,n.kt)("span",{className:"ph uicontrol"},"Test Suites")," folder > ",(0,n.kt)("span",{className:"ph uicontrol"},"New")," > ",(0,n.kt)("span",{className:"ph uicontrol"},"Dynamic Test Suite")," to create a Dynamic Test Suite.",(0,n.kt)("img",{className:"image",src:(0,o.Z)("/1585b290-c310-11ed-a4d3-0242cfbc79b5.png"),alt:"Katalon Studio - Dynamic Test Suite"}))),(0,n.kt)("li",{className:"li substep"},(0,n.kt)("span",{className:"ph cmd"},"Select ",(0,n.kt)("span",{className:"ph uicontrol"},"Generate Command")," icon near ",(0,n.kt)("span",{className:"ph uicontrol"},"Run")," icon and select Test Suite and other details.",(0,n.kt)("img",{className:"image",src:(0,o.Z)("/14e33100-c310-11ed-a4d3-0242cfbc79b5.png"),alt:"KS - generate command"}))))),(0,n.kt)("li",{className:"li step stepexpand"},(0,n.kt)("span",{className:"ph cmd"},"Execute Dynamic Test Suite using Console mode command."),(0,n.kt)("div",{className:"itemgroup info"},"This command can be configured in ",(0,n.kt)("span",{className:"ph"},"Katalon TestOps")," or in CI tool for triggering execution or can be run on cmd using ",(0,n.kt)("span",{className:"ph"},"Katalon Runtime Engine"),". ",(0,n.kt)("pre",{className:"pre codeblock"},(0,n.kt)("code",null,"./katalonc -noSplash -runMode=console","\n",'-projectPath="/Users/rupeshsawant/Katalon Studio/Katalon and',"\n",'Zephyr Integration/Katalon and Zephyr Integration.prj"',"\n",'-retry=0 -testSuitePath="Test Suites/Zephyr TestCycle Dynamic',"\n",'Test Suite" -browserType="Chrome" -executionProfile="default"',"\n",'-apiKey="<<Your APi Key>>" -orgID=<<Your Org Id>> --config',"\n","-proxy.auth.option=NO_PROXY -proxy.system.option=NO_PROXY","\n","-proxy.system.applyToDesiredCapabilities=true","\n","-webui.autoUpdateDrivers=true")),"You need to append two arguments with the Test Cycle Key value which you want to execute: ",(0,n.kt)("ul",{className:"ul"},(0,n.kt)("li",{className:"li"},(0,n.kt)("p",{className:"p"},(0,n.kt)("code",{className:"ph codeph"},'-testSuiteQuery="tag=(<<Your Test Cycle Key)>>)"'),": this argument will be used for filtering test cases linked to test cycle for execution in dynamic test suite.")),(0,n.kt)("li",{className:"li"},(0,n.kt)("p",{className:"p"},(0,n.kt)("code",{className:"ph codeph"},'-g_ZS_TestCycleKey="<<Your Test Cycle Key)>>"'),": this argument will be used for setting global variable value to selected test cycle which will be required in API calls."))),(0,n.kt)("div",{className:"p"},"The command will be updated as follows: ",(0,n.kt)("pre",{className:"pre codeblock"},(0,n.kt)("code",null,"./katalonc -noSplash -runMode=console","\n",'-projectPath="/Users/rupeshsawant/Katalon Studio/Katalon and',"\n",'Zephyr Integration/Katalon and Zephyr Integration.prj"',"\n",'-retry=0 -testSuitePath="Test Suites/Zephyr TestCycle Dynamic',"\n",'Test Suite" -browserType="Chrome" -executionProfile="default"',"\n",'-apiKey="<<Your APi Key>>" -orgID=<<Your Org Id>> --config',"\n","-proxy.auth.option=NO_PROXY -proxy.system.option=NO_PROXY","\n","-proxy.system.applyToDesiredCapabilities=true","\n",'-webui.autoUpdateDrivers=true -testSuiteQuery="tag=(<<Your',"\n",'Test Cycle Key)>>)" -g_ZS_TestCycleKey="<<Your Test Cycle',"\n",'Key)>>"'))))),(0,n.kt)("li",{className:"li step stepexpand"},(0,n.kt)("span",{className:"ph cmd"},"Check test results in Jira Zephyr Scale"),(0,n.kt)("div",{className:"itemgroup info"},"Results will be updated in Jira Zephyr scale in respective test cycle and test case with new execution record.",(0,n.kt)("img",{className:"image",src:(0,o.Z)("/157251a0-c310-11ed-a4d3-0242cfbc79b5.png"),alt:"Zephyr test result"})))))}d.isMDXComponent=!0}}]);