"use strict";(self.webpackChunkKatalon_Docs=self.webpackChunkKatalon_Docs||[]).push([[88522],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>d});var s=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,s)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,s,o=function(e,t){if(null==e)return{};var a,s,o={},n=Object.keys(e);for(s=0;s<n.length;s++)a=n[s],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(s=0;s<n.length;s++)a=n[s],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=s.createContext({}),c=function(e){var t=s.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=c(e.components);return s.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},h=s.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),h=c(a),d=o,u=h["".concat(l,".").concat(d)]||h[d]||m[d]||n;return a?s.createElement(u,r(r({ref:t},p),{},{components:a})):s.createElement(u,r({ref:t},p))}));function d(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=a.length,r=new Array(n);r[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,r[1]=i;for(var c=2;c<n;c++)r[c]=a[c];return s.createElement.apply(null,r)}return s.createElement.apply(null,a)}h.displayName="MDXCreateElement"},8113:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var s=a(87462),o=(a(67294),a(3905)),n=a(44996);const r={id:"96b809c0-22b2-11ed-9930-0242fe3e4a3f",title:"GraphQL in Katalon Studio",slug:"create-tests/test-objects/api-test-objects/graphql-in-katalon-studio",hide_title:!0},i='<a id="concept-3279" class="anchor_top_offset"/><a id="ariaid-title1" class="anchor_top_offset"/>GraphQL in <span xmlns="http://www.w3.org/1999/xhtml" className="ph">Katalon Studio</span>',l={unversionedId:"96b809c0-22b2-11ed-9930-0242fe3e4a3f",id:"96b809c0-22b2-11ed-9930-0242fe3e4a3f",title:"GraphQL in Katalon Studio",description:"This article provides basic information on GraphQL and how to work with GraphQL in Katalon Studio.",source:"@site/docs/96b809c0-22b2-11ed-9930-0242fe3e4a3f.md",sourceDirName:".",slug:"/create-tests/test-objects/api-test-objects/graphql-in-katalon-studio",permalink:"/docs/create-tests/test-objects/api-test-objects/graphql-in-katalon-studio",draft:!1,tags:[],version:"current",frontMatter:{id:"96b809c0-22b2-11ed-9930-0242fe3e4a3f",title:"GraphQL in Katalon Studio",slug:"create-tests/test-objects/api-test-objects/graphql-in-katalon-studio",hide_title:!0},sidebar:"aSidebar",previous:{title:"SOAP Request in Katalon Studio",permalink:"/docs/create-tests/test-objects/api-test-objects/soap-request-in-katalon-studio"},next:{title:"Authorization in Katalon Studio",permalink:"/docs/create-tests/test-objects/api-test-objects/authorization/authorization-in-katalon-studio"}},c={},p=[{value:'<a id="concept-3591" class="anchor_top_offset"/>What is GraphQL?',id:"what-is-graphql",level:2},{value:'<a id="concept-949" class="anchor_top_offset"/>GraphQL testing in Katalon Studio',id:"graphql-testing-in-katalon-studio",level:2},{value:'<a id="concept-7710" class="anchor_top_offset"/>Queries and mutations',id:"queries-and-mutations",level:3},{value:'<a id="concept-5078" class="anchor_top_offset"/>Validate GraphQL request and response against a schema',id:"validate-graphql-request-and-response-against-a-schema",level:3},{value:'<a id="task-6545" class="anchor_top_offset"/>Sending GraphQL queries using Query Parameters',id:"sending-graphql-queries-using-query-parameters",level:2},{value:'<a id="task-3748" class="anchor_top_offset"/>Sending GraphQL queries and mutations in the HTTP Body',id:"sending-graphql-queries-and-mutations-in-the-http-body",level:2},{value:'<a id="concept-9608" class="anchor_top_offset"/>Add a GraphQL request to a test case',id:"add-a-graphql-request-to-a-test-case",level:2},{value:'<a id="task-9476" class="anchor_top_offset"/>Use GraphQL variables',id:"use-graphql-variables",level:2},{value:'<a id="task-9154" class="anchor_top_offset"/>Validate GraphQL request and response against schemas',id:"validate-graphql-request-and-response-against-schemas",level:2}],m={toc:p};function h(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,s.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"graphql-in-katalon-studio"},(0,o.kt)("a",{id:"concept-3279",class:"anchor_top_offset"}),(0,o.kt)("a",{id:"ariaid-title1",class:"anchor_top_offset"}),"GraphQL in ",(0,o.kt)("span",{xmlns:"http://www.w3.org/1999/xhtml",className:"ph"},"Katalon Studio")),(0,o.kt)("p",{xmlns:"http://www.w3.org/1999/xhtml",className:"shortdesc"},"This article provides basic information on GraphQL and how to work with GraphQL in Katalon Studio."),(0,o.kt)("h2",{id:"what-is-graphql"},(0,o.kt)("a",{id:"concept-3591",class:"anchor_top_offset"}),"What is GraphQL?"),(0,o.kt)("p",{xmlns:"http://www.w3.org/1999/xhtml",className:"p"},"GraphQL is a query language that allows API consumers to write queries to get the exact data they need from a single request to a single endpoint. GraphQL provides a detailed and easy-to-understand description of the data in your API, making it easier to evolve APIs over time. GraphQL queries get many resources in a single request and always return predictable results. Therefore, GraphQL significantly improves the efficiency and performance of API calls."),(0,o.kt)("p",{xmlns:"http://www.w3.org/1999/xhtml",className:"p"},"To learn more about GraphQL, you can refer to GraphQL documentation: ",(0,o.kt)("a",{className:"xref j-external-link",href:"https://graphql.org/learn/",target:"_blank"},"Introduction to GraphQL"),"."),(0,o.kt)("h2",{id:"graphql-testing-in-katalon-studio"},(0,o.kt)("a",{id:"concept-949",class:"anchor_top_offset"}),"GraphQL testing in Katalon Studio"),(0,o.kt)("p",{xmlns:"http://www.w3.org/1999/xhtml",className:"p"},"With this GraphQL testing in Katalon Studio, you can:"),(0,o.kt)("ul",{xmlns:"http://www.w3.org/1999/xhtml",className:"ul"},(0,o.kt)("li",{className:"li"},"Create a GraphQL test request with RESTful by GET and POST methods, using queries or mutations."),(0,o.kt)("li",{className:"li"},"Use query variables in a GraphQL request."),(0,o.kt)("li",{className:"li"},"Validate GraphQL request and response against schemas.")),(0,o.kt)("h3",{id:"queries-and-mutations"},(0,o.kt)("a",{id:"concept-7710",class:"anchor_top_offset"}),"Queries and mutations"),(0,o.kt)("p",{xmlns:"http://www.w3.org/1999/xhtml",className:"p"},"The most typical GraphQL operations from the perspective of the client are queries and mutations. In terms of the CRUD model (create, read, update, and delete), a query is identical to read, using the GET method. Mutations handle all of the others, which are create, update, and delete."),(0,o.kt)("p",{xmlns:"http://www.w3.org/1999/xhtml",className:"p"},"Testing mutations are essential as it involves testing data access and additions to databases. Mutations modify data in the database and return us a value. Mutations can edit and manipulate the data from the server side."),(0,o.kt)("p",{xmlns:"http://www.w3.org/1999/xhtml",className:"p"},"There are two ways to execute a GraphQL request with RestFUL in Katalon Studio: GET and POST methods. You can put the GraphQL query into the GET query parameter to create a GraphQL test request. GraphQL mutations only support the POST method."),(0,o.kt)("h3",{id:"validate-graphql-request-and-response-against-a-schema"},(0,o.kt)("a",{id:"concept-5078",class:"anchor_top_offset"}),"Validate GraphQL request and response against a schema"),(0,o.kt)("p",{xmlns:"http://www.w3.org/1999/xhtml",className:"p"},"Since GraphQL returns a response in JSON format, you can validate a GraphQL response against a JSON schema. This action also helps you troubleshoot the error without the HAR file."),(0,o.kt)("p",{xmlns:"http://www.w3.org/1999/xhtml",className:"p"},"You can also validate a GraphQL  request body against a GraphQL schema to make sure the request is valid before sending the request to the server. The validation action happens on the server side. You receive the validation results in the ",(0,o.kt)("span",{className:"ph uicontrol"},"Response")," section if you use keywords in the ",(0,o.kt)("span",{className:"ph uicontrol"},"Verification")," tab or the ",(0,o.kt)("span",{className:"ph uicontrol"},"Log Viewer")," if you use keywords in a test case."),(0,o.kt)("h2",{id:"sending-graphql-queries-using-query-parameters"},(0,o.kt)("a",{id:"task-6545",class:"anchor_top_offset"}),"Sending GraphQL queries using Query Parameters"),(0,o.kt)("p",{xmlns:"http://www.w3.org/1999/xhtml",className:"shortdesc"},"This section shows you an example of how to send GraphQL queries using ",(0,o.kt)("span",{className:"ph uicontrol"},"Query Parameters"),". To learn more details about ",(0,o.kt)("span",{className:"ph uicontrol"},"Query Parameters"),", you can refer to this document: ",(0,o.kt)("a",{className:"xref",href:"/docs/create-tests/test-objects/api-test-objects/rest-request/parameterize-a-web-service-object-in-katalon-studio"},"Parameterize a Web Service Object"),"."),(0,o.kt)("section",{xmlns:"http://www.w3.org/1999/xhtml",className:"section context"},"In this example, we want to get country information from the ",(0,o.kt)("code",{className:"ph codeph"},"https://countries.trevorblades.com")," website. Do as follows:"),(0,o.kt)("ol",{xmlns:"http://www.w3.org/1999/xhtml",className:"ol steps"},(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"Create a ",(0,o.kt)("span",{className:"ph uicontrol"},"Web Service Request")," object and choose the ",(0,o.kt)("span",{className:"ph uicontrol"},"Request Type")," as ",(0,o.kt)("span",{className:"ph uicontrol"},"RESTful"),".")),(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"In the ",(0,o.kt)("span",{className:"ph uicontrol"},"Web Service Request")," object editor, choose the ",(0,o.kt)("span",{className:"ph uicontrol"},"GET")," request method.")),(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"In the ",(0,o.kt)("span",{className:"ph uicontrol"},"URL")," field, input this GraphQL URL: ",(0,o.kt)("code",{className:"ph codeph"},"https://countries.trevorblades.com/graphql?query=query Query ","{",' country(code: "VN") ',"{"," name native capital emoji currency languages ","{"," code name ","}"," ","}","}")),(0,o.kt)("div",{className:"itemgroup info"},"Katalon Studio detects the query parameters after the question mark and lists them in the ",(0,o.kt)("span",{className:"ph uicontrol"},"Query Parameters")," table like below:",(0,o.kt)("ul",{className:"ul"},(0,o.kt)("li",{className:"li"},"Name: query"),(0,o.kt)("li",{className:"li"},"Value: ",(0,o.kt)("code",{className:"ph codeph"},"query Query ","{",' country(code: "VN") ',"{"," name native capital emoji currency languages ","{"," code name ","}"," ","}","}"),(0,o.kt)("img",{className:"image",src:(0,n.Z)("/96bd12d0-22b2-11ed-9930-0242fe3e4a3f.png"),alt:"query parameters"}))))),(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"Save your request, then click ",(0,o.kt)("span",{className:"ph uicontrol"},"Test Request and Verify"),"."))),(0,o.kt)("section",{xmlns:"http://www.w3.org/1999/xhtml",className:"section result"},"In the ",(0,o.kt)("span",{className:"ph uicontrol"},"Response")," tab, the country information is returned as JSON responses.",(0,o.kt)("img",{className:"image",width:400,src:(0,n.Z)("/96aa0000-22b2-11ed-9930-0242fe3e4a3f.png"),alt:"GraphQL response"})),(0,o.kt)("h2",{id:"sending-graphql-queries-and-mutations-in-the-http-body"},(0,o.kt)("a",{id:"task-3748",class:"anchor_top_offset"}),"Sending GraphQL queries and mutations in the HTTP Body"),(0,o.kt)("section",{xmlns:"http://www.w3.org/1999/xhtml",className:"section context"},"POST requests usually use the application or JSON content type in the HTTP Body. To send a GraphQL query in the ",(0,o.kt)("span",{className:"ph uicontrol"},"HTTP Body"),", do as follows:"),(0,o.kt)("ol",{xmlns:"http://www.w3.org/1999/xhtml",className:"ol steps"},(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"Create a ",(0,o.kt)("span",{className:"ph uicontrol"},"Web Service Request")," object and choose the ",(0,o.kt)("span",{className:"ph uicontrol"},"Request Type")," as ",(0,o.kt)("span",{className:"ph uicontrol"},"RESTful"),". ")),(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"In the ",(0,o.kt)("span",{className:"ph uicontrol"},"Web Service Request")," object editor, choose the ",(0,o.kt)("span",{className:"ph uicontrol"},"POST")," request method.")),(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"In the ",(0,o.kt)("span",{className:"ph uicontrol"},"URL")," field, input the GraphQL endpoint URL."),(0,o.kt)("div",{className:"itemgroup info"},"For example: ",(0,o.kt)("code",{className:"ph codeph"},"https://katalon-sample-graphql-aut.herokuapp.com/graphql"))),(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"Switch to the ",(0,o.kt)("span",{className:"ph uicontrol"},"HTTP Body")," tab and choose the ",(0,o.kt)("span",{className:"ph uicontrol"},"GraphQL")," body type.",(0,o.kt)("img",{className:"image",width:700,src:(0,n.Z)("/96b375e0-22b2-11ed-9930-0242fe3e4a3f.png"),alt:"GraphQL query"}))),(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"In the ",(0,o.kt)("span",{className:"ph uicontrol"},"Query")," textbox, insert your GraphQL query or mutation."),(0,o.kt)("div",{className:"itemgroup info"},"GraphQL query example:",(0,o.kt)("pre",{className:"pre codeblock"},(0,o.kt)("code",null,"query ","{","\n","findAllBooks ","{","\n","    ","id","\n","    ","title","\n","    ","isbn","\n","    ","pageCount","\n","    ","author ","{","\n","        ","id","\n","        ","firstName","\n","        ","lastName","\n","    ","}","\n","  ","}","\n","}","\n")),"GraphQL mutation example:",(0,o.kt)("pre",{className:"pre codeblock"},(0,o.kt)("code",null,"mutation ","{","\n","    ","deleteBook(id:3)","\n","}","\n")))),(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"Save your request, then click ",(0,o.kt)("span",{className:"ph uicontrol"},"Test Request and Verify"),".")),(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"View the result in the ",(0,o.kt)("span",{className:"ph uicontrol"},"Response")," tab. "))),(0,o.kt)("section",{xmlns:"http://www.w3.org/1999/xhtml",className:"section result"},"Below are some examples of using GraphQL queries and mutations in the test request object:",(0,o.kt)("ul",{className:"ul"},(0,o.kt)("li",{className:"li"},(0,o.kt)("p",{className:"p"},"Find all books using a GraphQL query",(0,o.kt)("img",{className:"image",src:(0,n.Z)("/96baa1d0-22b2-11ed-9930-0242fe3e4a3f.png"),alt:"find all book"}))),(0,o.kt)("li",{className:"li"},(0,o.kt)("p",{className:"p"},"Create a new book using a GraphQL mutation",(0,o.kt)("img",{className:"image",src:(0,n.Z)("/96a3be70-22b2-11ed-9930-0242fe3e4a3f.png"),alt:"create a new book"}))),(0,o.kt)("li",{className:"li"},(0,o.kt)("p",{className:"p"},"Modify the name of a book using a GraphQL mutation",(0,o.kt)("img",{className:"image",src:(0,n.Z)("/96a0b130-22b2-11ed-9930-0242fe3e4a3f.png"),alt:"modify book name"}))),(0,o.kt)("li",{className:"li"},(0,o.kt)("p",{className:"p"},"Delete a book using a GraphQL mutation",(0,o.kt)("img",{className:"image",src:(0,n.Z)("/96a87960-22b2-11ed-9930-0242fe3e4a3f.png"),alt:"delete a book"}))))),(0,o.kt)("h2",{id:"add-a-graphql-request-to-a-test-case"},(0,o.kt)("a",{id:"concept-9608",class:"anchor_top_offset"}),"Add a GraphQL request to a test case"),(0,o.kt)("div",{xmlns:"http://www.w3.org/1999/xhtml",className:"p"},"You can add a GraphQL request into a test case. Katalon Studio generates a script that has send request method with a map of variables. Below is a sample test script generated:",(0,o.kt)("pre",{className:"pre codeblock"},(0,o.kt)("code",null,"res = WS.sendRequest(findTestObject('Country/CountryQueryVarsInVars', [('id') : 'US']))","\n","\n","println CustomKeywords.'util.JSON.jsonBeautify'( res.getResponseBodyContent());"))),(0,o.kt)("p",{xmlns:"http://www.w3.org/1999/xhtml",className:"p"},"Save and run your test case. You can view the result of sending the request in the ",(0,o.kt)("span",{className:"ph uicontrol"},"Log Viewer")," tab.",(0,o.kt)("img",{className:"image",src:(0,n.Z)("/96b74670-22b2-11ed-9930-0242fe3e4a3f.png"),alt:"log viewer tab"})),(0,o.kt)("h2",{id:"use-graphql-variables"},(0,o.kt)("a",{id:"task-9476",class:"anchor_top_offset"}),"Use GraphQL variables"),(0,o.kt)("section",{xmlns:"http://www.w3.org/1999/xhtml",className:"section context"},(0,o.kt)("p",{className:"p"},"To use GraphQL variables, do as follows:")),(0,o.kt)("ol",{xmlns:"http://www.w3.org/1999/xhtml",className:"ol steps"},(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"Switch to the ",(0,o.kt)("span",{className:"ph uicontrol"},"HTTP Body")," tab and choose ",(0,o.kt)("span",{className:"ph uicontrol"},"GraphQL")," body type.")),(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"In the ",(0,o.kt)("span",{className:"ph uicontrol"},"Query")," textbox, insert your GraphQL query with defined variables.",(0,o.kt)("img",{className:"image",width:700,src:(0,n.Z)("/96bc0160-22b2-11ed-9930-0242fe3e4a3f.png"),alt:"GraphQL query"}))),(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"In the ",(0,o.kt)("span",{className:"ph uicontrol"},"Query Variables")," textbox, insert the values of your GraphQL variables."),(0,o.kt)("div",{className:"itemgroup info"},(0,o.kt)("div",{className:"p"},"Example 1: In the ",(0,o.kt)("span",{className:"ph uicontrol"},"Query")," textbox, input ",(0,o.kt)("code",{className:"ph codeph"},"$id: ID!"),", then define ",(0,o.kt)("code",{className:"ph codeph"},"id")," in the ",(0,o.kt)("span",{className:"ph uicontrol"},"Query Variables")," textbox:",(0,o.kt)("pre",{className:"pre codeblock"},(0,o.kt)("code",null,"{","\n","    ",'"id" : "AU"',"\n","}")))),(0,o.kt)("div",{className:"itemgroup info"},(0,o.kt)("p",{className:"p"},"You can also use Katalon Studio variables as inputs for GraphQL variables using the ",(0,o.kt)("code",{className:"ph codeph"},"$","{","variable","}")," syntax.")),(0,o.kt)("div",{className:"itemgroup info"},(0,o.kt)("div",{className:"p"},"Example 2: In the ",(0,o.kt)("span",{className:"ph uicontrol"},"Query Variables")," textbox, use Katalon Studio variable: ",(0,o.kt)("code",{className:"ph codeph"},"$","{","id","}"),".",(0,o.kt)("pre",{className:"pre codeblock"},(0,o.kt)("code",null,"{","\n","    ",'"id" : "$',"{","id","}",'"',"\n","}","\n")),(0,o.kt)("img",{className:"image",width:700,src:(0,n.Z)("/96b4d570-22b2-11ed-9930-0242fe3e4a3f.png"),alt:"query variable in variable"}))),(0,o.kt)("div",{className:"itemgroup info"},"Then, navigate to the ",(0,o.kt)("span",{className:"ph uicontrol"},"Variables")," tab and define the variable name: ",(0,o.kt)("code",{className:"ph codeph"},"id")," the default value: ",(0,o.kt)("code",{className:"ph codeph"},'"VN"')," in our case.",(0,o.kt)("img",{className:"image",src:(0,n.Z)("/96b598c0-22b2-11ed-9930-0242fe3e4a3f.png"),alt:"variables tab"})))),(0,o.kt)("h2",{id:"validate-graphql-request-and-response-against-schemas"},(0,o.kt)("a",{id:"task-9154",class:"anchor_top_offset"}),"Validate GraphQL request and response against schemas"),(0,o.kt)("section",{xmlns:"http://www.w3.org/1999/xhtml",className:"section context"},"To validate a GraphQL request body and the response returns against schemas, do as follows:"),(0,o.kt)("ol",{xmlns:"http://www.w3.org/1999/xhtml",className:"ol steps"},(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"Create a GraphQL web service request object.")),(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"In the web service request object editor, switch to the ",(0,o.kt)("span",{className:"ph uicontrol"},"Verification")," tab.")),(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"In the ",(0,o.kt)("span",{className:"ph uicontrol"},"Verification")," snippets, use the ",(0,o.kt)("code",{className:"ph codeph"},"WS.validateGraphQLBodyAgainstSchema")," with the request body and a schema. See ",(0,o.kt)("a",{className:"xref",href:"/docs/create-tests/keywords/keyword-description-in-katalon-studio/web-service-keywords/ws-validate-graphql-request-against-a-graphql-schema"},"[WS] Validate GraphQL request body against a GraphQL schema"),"."),(0,o.kt)("div",{className:"itemgroup info"},"The response returns as the JSON format, so you can also add the ",(0,o.kt)("code",{className:"ph codeph"},"WS.validateJsonAgainstSchema")," to validate the response. See ",(0,o.kt)("a",{className:"xref",href:"/docs/create-tests/keywords/keyword-description-in-katalon-studio/web-service-keywords/ws-validate-json-string-against-a-schema#id_4"},"[WS] Validate the response against a JSON schema"),"."),(0,o.kt)("div",{className:"itemgroup info"},"For example:",(0,o.kt)("pre",{className:"pre codeblock"},(0,o.kt)("code",null,"import static org.assertj.core.api.Assertions.*","\n","\n","import com.kms.katalon.core.model.FailureHandling","\n","import com.kms.katalon.core.testobject.RequestObject","\n","import com.kms.katalon.core.testobject.ResponseObject","\n","import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WS","\n","import com.kms.katalon.core.webservice.verification.WSResponseManager","\n","\n","import groovy.json.JsonSlurper","\n","import internal.GlobalVariable as GlobalVariable","\n","\n","RequestObject request = WSResponseManager.getInstance().getCurrentRequest()","\n","\n","ResponseObject response = WSResponseManager.getInstance().getCurrentResponse()","\n","\n",'WS.validateGraphQLBodyAgainstSchema(request, "Schema/Country.qls", FailureHandling.CONTINUE_ON_FAILURE)',"\n","\n",'WS.validateJsonAgainstSchema(response, "Schema/JSON/CountrySchema.json", FailureHandling.STOP_ON_FAILURE)')))),(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"Save and click ",(0,o.kt)("span",{className:"ph uicontrol"},"Test Request and Verify"),"."))),(0,o.kt)("section",{xmlns:"http://www.w3.org/1999/xhtml",className:"section result"},"You can view the validation result in the ",(0,o.kt)("span",{className:"ph uicontrol"},"Response")," section.",(0,o.kt)("img",{className:"image",src:(0,n.Z)("/96aebaf0-22b2-11ed-9930-0242fe3e4a3f.png"),alt:"response tab"}),(0,o.kt)("p",{className:"p"},"You can also validate the GraphQL request/ response against schemas in a test case and view the validation result in the ",(0,o.kt)("span",{className:"ph uicontrol"},"Log Viewer"),". For example:"),(0,o.kt)("p",{className:"p"},(0,o.kt)("img",{className:"image",src:(0,n.Z)("/96abfbd0-22b2-11ed-9930-0242fe3e4a3f.png")}),(0,o.kt)("img",{className:"image",src:(0,n.Z)("/96bec080-22b2-11ed-9930-0242fe3e4a3f.png")}))," ",(0,o.kt)("div",{className:"p"},"Sample script:",(0,o.kt)("pre",{className:"pre codeblock"},(0,o.kt)("code",null,"import static com.kms.katalon.core.checkpoint.CheckpointFactory.findCheckpoint","\n","import static com.kms.katalon.core.testcase.TestCaseFactory.findTestCase","\n","import static com.kms.katalon.core.testdata.TestDataFactory.findTestData","\n","import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject","\n","import static com.kms.katalon.core.testobject.ObjectRepository.findWindowsObject","\n","import com.kms.katalon.core.checkpoint.Checkpoint as Checkpoint","\n","import com.kms.katalon.core.cucumber.keyword.CucumberBuiltinKeywords as CucumberKW","\n","import com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as Mobile","\n","import com.kms.katalon.core.model.FailureHandling as FailureHandling","\n","import com.kms.katalon.core.testcase.TestCase as TestCase","\n","import com.kms.katalon.core.testdata.TestData as TestData","\n","import com.kms.katalon.core.testng.keyword.TestNGBuiltinKeywords as TestNGKW","\n","import com.kms.katalon.core.testobject.RequestObject","\n","import com.kms.katalon.core.testobject.TestObject as TestObject","\n","import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WS","\n","import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI","\n","import com.kms.katalon.core.windows.keyword.WindowsBuiltinKeywords as Windows","\n","import internal.GlobalVariable as GlobalVariable","\n","import org.openqa.selenium.Keys as Keys","\n","\n","RequestObject req = findTestObject('Country/CountryQuerySchema');","\n",'if (WS.validateGraphQLBodyAgainstSchema(req, "Schema/Country.qls")) ',"{","\n","\t","res = WS.sendRequest(findTestObject('Country/CountryQuerySchema'))","\n","\t",'WS.validateAgainstJsonSchema(res, "Schema/JSON/CountrySchema.json")',"\n","}")))))}h.isMDXComponent=!0}}]);