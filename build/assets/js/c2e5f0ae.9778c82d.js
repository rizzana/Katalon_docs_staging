"use strict";(self.webpackChunkKatalon_Docs=self.webpackChunkKatalon_Docs||[]).push([[44810],{3905:(e,t,s)=>{s.d(t,{Zo:()=>p,kt:()=>u});var a=s(67294);function o(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function n(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,a)}return s}function i(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?n(Object(s),!0).forEach((function(t){o(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):n(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function l(e,t){if(null==e)return{};var s,a,o=function(e,t){if(null==e)return{};var s,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)s=n[a],t.indexOf(s)>=0||(o[s]=e[s]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)s=n[a],t.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(o[s]=e[s])}return o}var c=a.createContext({}),r=function(e){var t=a.useContext(c),s=t;return e&&(s="function"==typeof e?e(t):i(i({},t),e)),s},p=function(e){var t=r(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var s=e.components,o=e.mdxType,n=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=r(s),u=o,h=m["".concat(c,".").concat(u)]||m[u]||d[u]||n;return s?a.createElement(h,i(i({ref:t},p),{},{components:s})):a.createElement(h,i({ref:t},p))}));function u(e,t){var s=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=s.length,i=new Array(n);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var r=2;r<n;r++)i[r]=s[r];return a.createElement.apply(null,i)}return a.createElement.apply(null,s)}m.displayName="MDXCreateElement"},91546:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>r,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var a=s(87462),o=(s(67294),s(3905)),n=s(44996);const i={id:"842eb160-0e4c-11ee-bd0e-0242c7a41fd4",title:"StudioAssist in Katalon Studio",slug:"proof-of-concept/studioassist-in-katalon-studio",hide_title:!0},l='<a id="concept-5490" class="anchor_top_offset"/><a id="ariaid-title1" class="anchor_top_offset"/>StudioAssist in Katalon Studio',c={unversionedId:"842eb160-0e4c-11ee-bd0e-0242c7a41fd4",id:"842eb160-0e4c-11ee-bd0e-0242c7a41fd4",title:"StudioAssist in Katalon Studio",description:"StudioAssist is an AI-powered assistant in Katalon Studio that enables testers to write automated tests more effectively and efficiently. StudioAssist is built based on OpenAI GPT API and capable of intelligent code generation and explanation.",source:"@site/docs/842eb160-0e4c-11ee-bd0e-0242c7a41fd4.md",sourceDirName:".",slug:"/proof-of-concept/studioassist-in-katalon-studio",permalink:"/docs/proof-of-concept/studioassist-in-katalon-studio",draft:!1,tags:[],version:"current",frontMatter:{id:"842eb160-0e4c-11ee-bd0e-0242c7a41fd4",title:"StudioAssist in Katalon Studio",slug:"proof-of-concept/studioassist-in-katalon-studio",hide_title:!0},sidebar:"aSidebar",previous:{title:"Troubleshooting autonomous test generation issues",permalink:"/docs/proof-of-concept/autonomous-test-generation/troubleshooting-autonomous-test-generation-issues"},next:{title:"Security and Privacy FAQ",permalink:"/docs/security-and-privacy-faq"}},r={},p=[{value:'<a id="task-8589" class="anchor_top_offset"/>Enable StudioAssist',id:"enable-studioassist",level:2},{value:'<a id="task-9622" class="anchor_top_offset"/>Generate code',id:"generate-code",level:2},{value:'<a id="task-9914" class="anchor_top_offset"/>Explain code',id:"explain-code",level:2},{value:'<a id="concept-2201" class="anchor_top_offset"/>Known limitations',id:"known-limitations",level:2},{value:'<a id="concept-9765" class="anchor_top_offset"/>Tips to use StudioAssist',id:"tips-to-use-studioassist",level:2}],d={toc:p};function m(e){let{components:t,...s}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"studioassist-in-katalon-studio"},(0,o.kt)("a",{id:"concept-5490",class:"anchor_top_offset"}),(0,o.kt)("a",{id:"ariaid-title1",class:"anchor_top_offset"}),"StudioAssist in Katalon Studio"),(0,o.kt)("p",{xmlns:"http://www.w3.org/1999/xhtml",className:"p"},"StudioAssist is an AI-powered assistant in ",(0,o.kt)("span",{className:"ph"},"Katalon Studio")," that enables testers to write automated tests more effectively and efficiently. StudioAssist is built based on OpenAI GPT API and capable of intelligent code generation and explanation."),(0,o.kt)("p",{xmlns:"http://www.w3.org/1999/xhtml",className:"p"},"In this proof of concept release, StudioAssist is built directly into ",(0,o.kt)("span",{className:"ph"},"Katalon Studio"),", allowing testers to seamlessly interact with the assistant with two capabilities:"),(0,o.kt)("div",{xmlns:"http://www.w3.org/1999/xhtml",className:"p"},(0,o.kt)("ul",{className:"ul"},(0,o.kt)("li",{className:"li"},(0,o.kt)("p",{className:"p"},"Code generation: StudioAssist can generate automation test code based on user prompt in the form of code comments.")),(0,o.kt)("li",{className:"li"},(0,o.kt)("p",{className:"p"},"Code explanation: You can highlight a code block and ask StudioAssist to explain it.")))),(0,o.kt)("div",{xmlns:"http://www.w3.org/1999/xhtml",className:"p"},(0,o.kt)("div",{className:"note important note_important"},(0,o.kt)("span",{className:"note__title"},"Important:")," ",(0,o.kt)("ul",{className:"ul"},(0,o.kt)("li",{className:"li"},"This proof of concept (PoC) is not ready for production use. We recommend using this PoC for evaluation purposes only."),(0,o.kt)("li",{className:"li"},"StudioAssist is available with Katalon Studio version 8.6.7.beta at: ",(0,o.kt)("a",{className:"xref j-external-link",href:"https://github.com/katalon-studio/katalon-studio/releases",target:"_blank"},"katalon-studio/releases"),"."),(0,o.kt)("li",{className:"li"},"You need to generate an OpenAI API key. To generate the key, go to: ",(0,o.kt)("a",{className:"xref j-external-link",href:"https://platform.openai.com/account/api-keys",target:"_blank"},"OpenAI API Key"),"."),(0,o.kt)("li",{className:"li"},"To learn more about OpenAI API data policies, refer to ",(0,o.kt)("a",{className:"xref j-external-link",href:"https://openai.com/policies/api-data-usage-policies",target:"_blank"},"API data usage policies"),". ")))),(0,o.kt)("h2",{id:"enable-studioassist"},(0,o.kt)("a",{id:"task-8589",class:"anchor_top_offset"}),"Enable StudioAssist"),(0,o.kt)("section",{xmlns:"http://www.w3.org/1999/xhtml",className:"section context"},(0,o.kt)("p",{className:"p"},"As StudioAssist is built with OpenAI API, you need to provide your API key and enable the feature in ",(0,o.kt)("span",{className:"ph"},"Katalon Studio")," settings. Follow these steps:")),(0,o.kt)("ol",{xmlns:"http://www.w3.org/1999/xhtml",className:"ol steps"},(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"In ",(0,o.kt)("span",{className:"ph"},"Katalon Studio"),", click on the OpenAI icon. "),(0,o.kt)("div",{className:"itemgroup info"},(0,o.kt)("img",{className:"image",width:400,src:(0,n.Z)("/8436c7b0-0e4c-11ee-bd0e-0242c7a41fd4.png"),alt:"OpenAI icon"})),(0,o.kt)("ol",{type:"a",className:"ol substeps"},(0,o.kt)("li",{className:"li substep"},(0,o.kt)("span",{className:"ph cmd"},"You can also go to ",(0,o.kt)("span",{className:"ph uicontrol"},"Katalon Studio")," > ",(0,o.kt)("span",{className:"ph uicontrol"},"Settings")," > ",(0,o.kt)("span",{className:"ph uicontrol"},"Katalon")," > ",(0,o.kt)("span",{className:"ph uicontrol"},"StudioAssist"),". ")))),(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"In the StudioAssist settings, input your OpenAI secret key and token limit."),(0,o.kt)("div",{className:"itemgroup info"},(0,o.kt)("p",{className:"p"},(0,o.kt)("img",{className:"image",width:600,src:(0,n.Z)("/844ac4e0-0e4c-11ee-bd0e-0242c7a41fd4.png"),alt:"StudioAssist Settings"})),(0,o.kt)("p",{className:"p"},"To learn more about the token limits, refer to the OpenAI rate limits documentation: ",(0,o.kt)("a",{className:"xref j-external-link",href:"https://help.openai.com/en/articles/4936856-what-are-tokens-and-how-to-count-them#h_051eb08805",target:"_blank"},"OpenAI Token Limits"),"."))),(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"Click ",(0,o.kt)("span",{className:"ph uicontrol"},"Apply"),"."))),(0,o.kt)("section",{xmlns:"http://www.w3.org/1999/xhtml",className:"section result"},"StudioAssist is now enabled."),(0,o.kt)("h2",{id:"generate-code"},(0,o.kt)("a",{id:"task-9622",class:"anchor_top_offset"}),"Generate code"),(0,o.kt)("p",{xmlns:"http://www.w3.org/1999/xhtml",className:"shortdesc"},"StudioAssist can generate intelligent automation test code suggestion based on a prompt."),(0,o.kt)("section",{xmlns:"http://www.w3.org/1999/xhtml",className:"section context"},(0,o.kt)("p",{className:"p"},"To generate code with StudioAssist, follow these steps:")),(0,o.kt)("ol",{xmlns:"http://www.w3.org/1999/xhtml",className:"ol steps"},(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"Open a test case in ",(0,o.kt)("span",{className:"ph uicontrol"},"Script")," mode.")),(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"Provide your code prompt in terms of code comments, single line or block comment."),(0,o.kt)("div",{className:"itemgroup stepxmp"},"For example, the prompt can be:",(0,o.kt)("pre",{className:"pre codeblock"},(0,o.kt)("code",null,"\n","/* Write a Katalon Studio test case to perform the following steps.","\n"," * 1. Open browser to the URL stored in G_SiteURL","\n"," * 2. Click the make appointment button","\n"," * 3. Fill in the username and password fields based on the variables","\n"," * 4. Click the login button","\n"," * 5. Verify that the appointment div exists","\n"," * 6. Close the browser","\n"," * */")))),(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"Select the prompt text. Right-click and select ",(0,o.kt)("span",{className:"ph uicontrol"},"StudioAssist")," > ",(0,o.kt)("span",{className:"ph uicontrol"},"Generate Code"),". You can also use the hotkeys, ",(0,o.kt)("kbd",{className:"ph userinput"},"Ctrl")," + ",(0,o.kt)("kbd",{className:"ph userinput"},"Shift")," + ",(0,o.kt)("kbd",{className:"ph userinput"},"C")," for Windows or ",(0,o.kt)("kbd",{className:"ph userinput"},"^")," + ",(0,o.kt)("kbd",{className:"ph userinput"},"\u2325")," + ",(0,o.kt)("kbd",{className:"ph userinput"},"C")," for macOS."),(0,o.kt)("div",{className:"itemgroup info"},(0,o.kt)("p",{className:"p"},(0,o.kt)("img",{className:"image",width:500,src:(0,n.Z)("/844dab10-0e4c-11ee-bd0e-0242c7a41fd4.png"),alt:"Generate Code button"}))))),(0,o.kt)("section",{xmlns:"http://www.w3.org/1999/xhtml",className:"section result"},(0,o.kt)("p",{className:"p"},"StudioAssist then generates the test script below the prompt text:"),(0,o.kt)("p",{className:"p"},(0,o.kt)("img",{className:"image",width:600,src:(0,n.Z)("/841276d0-0e4c-11ee-bd0e-0242c7a41fd4.png"),alt:"StudioAssist Code generation results"}))),(0,o.kt)("h2",{id:"explain-code"},(0,o.kt)("a",{id:"task-9914",class:"anchor_top_offset"}),"Explain code"),(0,o.kt)("p",{xmlns:"http://www.w3.org/1999/xhtml",className:"shortdesc"},"You can highlight a code snippet and ask StudioAssist the explain the code."),(0,o.kt)("section",{xmlns:"http://www.w3.org/1999/xhtml",className:"section context"},"To generate code explanation, follow these steps:"),(0,o.kt)("ol",{xmlns:"http://www.w3.org/1999/xhtml",className:"ol steps"},(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"Open a test case with existing test steps in ",(0,o.kt)("span",{className:"ph uicontrol"},"Script")," mode.")),(0,o.kt)("li",{className:"li step stepexpand"},(0,o.kt)("span",{className:"ph cmd"},"Select the the desired code snippet. Right-click and select ",(0,o.kt)("span",{className:"ph uicontrol"},"StudioAssist")," > ",(0,o.kt)("span",{className:"ph uicontrol"},"Explain Code"),". You can also use the hotkeys, ",(0,o.kt)("kbd",{className:"ph userinput"},"Ctrl")," + ",(0,o.kt)("kbd",{className:"ph userinput"},"Shift")," + ",(0,o.kt)("kbd",{className:"ph userinput"},"E")," for Windows or ",(0,o.kt)("kbd",{className:"ph userinput"},"^")," + ",(0,o.kt)("kbd",{className:"ph userinput"},"\u2325")," + ",(0,o.kt)("kbd",{className:"ph userinput"},"E")," for macOS."),(0,o.kt)("div",{className:"itemgroup stepxmp"},(0,o.kt)("img",{className:"image",width:600,src:(0,n.Z)("/84336c50-0e4c-11ee-bd0e-0242c7a41fd4.png"),alt:"Explain Code button"})))),(0,o.kt)("section",{xmlns:"http://www.w3.org/1999/xhtml",className:"section result"},(0,o.kt)("p",{className:"p"},"StudioAssist then generates the code explanation below the selected script:"),(0,o.kt)("p",{className:"p"},(0,o.kt)("img",{className:"image",width:600,src:(0,n.Z)("/84559a50-0e4c-11ee-bd0e-0242c7a41fd4.png"),alt:"StudioAssist code explanation results"}))),(0,o.kt)("h2",{id:"known-limitations"},(0,o.kt)("a",{id:"concept-2201",class:"anchor_top_offset"}),"Known limitations"),(0,o.kt)("p",{xmlns:"http://www.w3.org/1999/xhtml",className:"p"},"As a proof of concept, StudioAssist comes with some limitations:"),(0,o.kt)("div",{xmlns:"http://www.w3.org/1999/xhtml",className:"p"},(0,o.kt)("ul",{className:"ul"},(0,o.kt)("li",{className:"li"},"Possible AI hallucinations: StudioAssist might generate code with made-up built-in keywords. You need to double-check the generated code and revise with the valid equivalent."),(0,o.kt)("li",{className:"li"},"Lack of project context: StudioAssist is not aware of test object library, global variables, custom keywords, other test cases, test data, etc. To make sure that the code is generated with proper variables and locators, you should specify them in the prompt."),(0,o.kt)("li",{className:"li"},"Requirements for programming and debugging experience: the lack of context awareness leads to incorrect code generation and explanation. Therefore, you might need programming experience and ",(0,o.kt)("span",{className:"ph"},"Katalon Studio")," keyword knowledge for debugging."))),(0,o.kt)("h2",{id:"tips-to-use-studioassist"},(0,o.kt)("a",{id:"concept-9765",class:"anchor_top_offset"}),"Tips to use StudioAssist"),(0,o.kt)("p",{xmlns:"http://www.w3.org/1999/xhtml",className:"shortdesc"},"To generate desirable results with StudioAssist, you can provide prompt text in certain format and with specific context. The following are some tips to use StudioAssist effectively."),(0,o.kt)("ol",{xmlns:"http://www.w3.org/1999/xhtml",className:"ol"},(0,o.kt)("li",{className:"li"},(0,o.kt)("p",{className:"p"},"When you need to perform multiple actions, write each action in a bullet point."),(0,o.kt)("div",{className:"p"},"For example, instead of writing a prompt in one paragraph:",(0,o.kt)("pre",{className:"pre codeblock"},(0,o.kt)("code",null,"/* Write me a test case that open a browser to a URL, log in to a website, click the login button, input the username and password, then close the browser */"))),(0,o.kt)("div",{className:"p"},"You can provide a list of actions:",(0,o.kt)("pre",{className:"pre codeblock"},(0,o.kt)("code",null,"/* Write me a test case that:","\n","* 1. Open a browser to a URL","\n","* 2. Log in to the website","\n","* 3. Click the login button","\n","* 4. Input username and password","\n","* 5. Clock the browser","\n","*/")))),(0,o.kt)("li",{className:"li"},(0,o.kt)("p",{className:"p"},"Break complex tasks into smaller tasks and use StudioAssist on each small task.")),(0,o.kt)("li",{className:"li"},(0,o.kt)("p",{className:"p"},"To produce output in a specific format, you can provide the context in your comment."),(0,o.kt)("div",{className:"p"},"For example, to generate a custom keyword, you should provide details about the method template, data type, and possible exceptions:",(0,o.kt)("pre",{className:"pre codeblock"},(0,o.kt)("code",null,"/*","\n"," * Write me a clickElement method that receives a test object id as a string and does as follows:","\n"," *","\n"," * 1. Find a web element","\n"," * 2. Click the element","\n"," * 3. If cannot click the element, catch WebElementNotFoundException exception and use KeywordUtil.markFailed to say that you cannot find the element","\n"," * 4. If other errors, catch Exception saying that you failed to click the element with the KeywordUtil.markFailed","\n"," * 5. Otherwise, mark the keyword as succeed","\n"," *","\n"," * The clickElement method should have the following format","\n"," *","\n"," * @Keyword","\n"," * def clickElement(<test object string>) ","{","\n"," * ","\t","<content of the method>","\n"," * ","}","\n","*/"))))))}m.isMDXComponent=!0}}]);